import { FIGHT_STYLE, WEAPONSKILL } from "./SampEnum";
export declare class SampPlayerNativeFunctions {
    playerid: number;
    constructor(playerid: number);
    SendClientMessage(color: string, message: string): number;
    SendPlayerMessageToPlayer(senderid: number, message: string): number;
    SendDeathMessageToPlayer(killer: number, killee: number, weapon: number): number;
    GameTextForPlayer(string: string, time: number, style: number): number;
    IsPlayerNPC(): number;
    IsPlayerAdmin(): number;
    Kick(): number;
    Ban(): number;
    BanEx(reason: string): number;
    GetPlayerNetworkStats(retstr_size: number): string;
    GetPlayerVersion(len: number): string;
    NetStats_GetConnectedTime(): number;
    NetStats_MessagesReceived(): number;
    NetStats_BytesReceived(): number;
    NetStats_MessagesSent(): number;
    NetStats_BytesSent(): number;
    NetStats_MessagesRecvPerSecond(): number;
    NetStats_PacketLossPercent(): number;
    NetStats_ConnectionStatus(): number;
    NetStats_GetIpPort(ip_port_len: number): string;
    ShowMenuForPlayer(menuid: number): number;
    HideMenuForPlayer(menuid: number): number;
    GetPlayerMenu(): number;
    TextDrawShowForPlayer(text: number): number;
    TextDrawHideForPlayer(text: number): number;
    GangZoneShowForPlayer(zone: number, color: string): number;
    GangZoneHideForPlayer(zone: number): number;
    GangZoneFlashForPlayer(zone: number, flashcolor: string): number;
    GangZoneStopFlashForPlayer(zone: number): number;
    Attach3DTextLabelToPlayer(id: number, OffsetX: number, OffsetY: number, OffsetZ: number): number;
    CreatePlayer3DTextLabel(text: string, color: string, X: number, Y: number, Z: number, DrawDistance: number, attachedplayer: number, attachedvehicle: number, testLOS: number): number;
    DeletePlayer3DTextLabel(id: number): number;
    UpdatePlayer3DTextLabelText(id: number, color: string, text: string): number;
    ShowPlayerDialog(dialogid: number, style: number, caption: string, info: string, button1: string, button2: string): number;
    gpci(maxlen: number): string;
    AttachObjectToPlayer(objectid: number, OffsetX: number, OffsetY: number, OffsetZ: number, RotX: number, RotY: number, RotZ: number): number;
    EditObject(objectid: number): number;
    EditPlayerObject(objectid: number): number;
    SelectObject(): number;
    CancelEdit(): number;
    CreatePlayerObject(modelid: number, X: number, Y: number, Z: number, rX: number, rY: number, rZ: number, DrawDistance: number): number;
    AttachPlayerObjectToVehicle(objectid: number, vehicleid: number, fOffsetX: number, fOffsetY: number, fOffsetZ: number, fRotX: number, fRotY: number, RotZ: number): number;
    SetPlayerObjectPos(objectid: number, X: number, Y: number, Z: number): number;
    GetPlayerObjectPos(objectid: number): Array<any>;
    SetPlayerObjectRot(objectid: number, RotX: number, RotY: number, RotZ: number): number;
    GetPlayerObjectRot(objectid: number): Array<any>;
    GetPlayerObjectModel(objectid: number): number;
    SetPlayerObjectNoCameraCol(objectid: number): number;
    IsValidPlayerObject(objectid: number): number;
    DestroyPlayerObject(objectid: number): number;
    MovePlayerObject(objectid: number, X: number, Y: number, Z: number, Speed: number, RotX: number, RotY: number, RotZ: number): number;
    StopPlayerObject(objectid: number): number;
    IsPlayerObjectMoving(objectid: number): number;
    SetPlayerObjectMaterial(objectid: number, materialindex: number, modelid: number, txdname: string, texturename: string, materialcolor: string): number;
    SetPlayerObjectMaterialText(objectid: number, text: string, materialindex: number, materialsize: number, fontface: string, fontsize: number, bold: number, fontcolor: string, backcolor: string, textalignment: number): number;
    SetSpawnInfo(team: number, skin: number, x: number, y: number, z: number, rotation: number, weapon1: number, weapon1_ammo: number, weapon2: number, weapon2_ammo: number, weapon3: number, weapon3_ammo: number): number;
    SpawnPlayer(): number;
    SetPlayerPos(x: number, y: number, z: number): number;
    SetPlayerPosFindZ(x: number, y: number, z: number): number;
    GetPlayerPos(): Array<any>;
    SetPlayerFacingAngle(ang: number): number;
    GetPlayerFacingAngle(): number;
    IsPlayerInRangeOfPoint(range: number, x: number, y: number, z: number): number;
    GetPlayerDistanceFromPoint(X: number, Y: number, Z: number): number;
    IsPlayerStreamedIn(forplayerid: number): number;
    SetPlayerInterior(interiorid: number): number;
    GetPlayerInterior(): number;
    SetPlayerHealth(health: number): number;
    GetPlayerHealth(): number;
    SetPlayerArmour(armour: number): number;
    GetPlayerArmour(): number;
    SetPlayerAmmo(weaponslot: number, ammo: number): number;
    GetPlayerAmmo(): number;
    GetPlayerWeaponState(): number;
    GetPlayerTargetPlayer(): number;
    GetPlayerTargetActor(): number;
    SetPlayerTeam(teamid: number): number;
    GetPlayerTeam(): number;
    SetPlayerScore(score: number): number;
    GetPlayerScore(): number;
    GetPlayerDrunkLevel(): number;
    SetPlayerDrunkLevel(level: number): number;
    SetPlayerColor(color: string): number;
    GetPlayerColor(): number;
    SetPlayerSkin(skinid: number): number;
    GetPlayerSkin(): number;
    GivePlayerWeapon(weaponid: number, ammo: number): number;
    ResetPlayerWeapons(): number;
    SetPlayerArmedWeapon(weaponid: number): number;
    GetPlayerWeaponData(slot: number): Array<any>;
    GivePlayerMoney(money: number): number;
    ResetPlayerMoney(): number;
    SetPlayerName(name: string): number;
    GetPlayerMoney(): number;
    GetPlayerState(): number;
    GetPlayerIp(len: number): string;
    GetPlayerPing(): number;
    GetPlayerWeapon(): number;
    GetPlayerKeys(): Array<any>;
    GetPlayerName(len: number): string;
    SetPlayerTime(hour: number, minute: number): number;
    GetPlayerTime(): Array<any>;
    TogglePlayerClock(toggle: number): number;
    SetPlayerWeather(weather: number): number;
    ForceClassSelection(): number;
    SetPlayerWantedLevel(level: number): number;
    GetPlayerWantedLevel(): number;
    SetPlayerFightingStyle(style: FIGHT_STYLE): number;
    GetPlayerFightingStyle(): FIGHT_STYLE;
    SetPlayerVelocity(X: number, Y: number, Z: number): number;
    GetPlayerVelocity(): Array<any>;
    PlayCrimeReportForPlayer(suspectid: number, crime: number): number;
    PlayAudioStreamForPlayer(url: string, posX: number, posY: number, posZ: number, distance: number, usepos: number): number;
    StopAudioStreamForPlayer(): number;
    SetPlayerShopName(shopname: string): number;
    SetPlayerSkillLevel(skill: WEAPONSKILL, level: number): number;
    GetPlayerSurfingVehicleID(): number;
    GetPlayerSurfingObjectID(): number;
    RemoveBuildingForPlayer(modelid: number, fX: number, fY: number, fZ: number, fRadius: number): number;
    GetPlayerLastShotVectors(): Array<any>;
    SetPlayerAttachedObject(index: number, modelid: number, bone: number, fOffsetX: number, fOffsetY: number, fOffsetZ: number, fRotX: number, fRotY: number, fRotZ: number, fScaleX: number, fScaleY: number, fScaleZ: number, materialcolor1: number, materialcolor2: number): number;
    RemovePlayerAttachedObject(index: number): number;
    IsPlayerAttachedObjectSlotUsed(index: number): number;
    EditAttachedObject(index: number): number;
    CreatePlayerTextDraw(x: number, y: number, text: string): number;
    PlayerTextDrawDestroy(text: number): void;
    PlayerTextDrawLetterSize(text: number, x: number, y: number): number;
    PlayerTextDrawTextSize(text: number, x: number, y: number): number;
    PlayerTextDrawAlignment(text: number, alignment: number): number;
    PlayerTextDrawColor(text: number, color: string): number;
    PlayerTextDrawUseBox(text: number, use: 0 | 1): number;
    PlayerTextDrawBoxColor(text: number, color: string): number;
    PlayerTextDrawSetShadow(text: number, size: number): number;
    PlayerTextDrawSetOutline(text: number, size: number): number;
    PlayerTextDrawBackgroundColor(text: number, color: string): number;
    PlayerTextDrawFont(text: number, font: number): number;
    PlayerTextDrawSetProportional(text: number, set: number): number;
    PlayerTextDrawSetSelectable(text: number, set: number): number;
    PlayerTextDrawShow(text: number): number;
    PlayerTextDrawHide(text: number): number;
    PlayerTextDrawSetString(text: number, string: string): number;
    PlayerTextDrawSetPreviewModel(text: number, modelindex: number): number;
    PlayerTextDrawSetPreviewRot(text: number, fRotX: number, fRotY: number, fRotZ: number, fZoom: number): number;
    PlayerTextDrawSetPreviewVehCol(text: number, color1: number, color2: number): number;
    SetPVarInt(varname: string, int_value: number): number;
    GetPVarInt(varname: string): number;
    SetPVarString(varname: string, string_value: string): number;
    GetPVarString(varname: string, len: number): string;
    SetPVarFloat(varname: string, float_value: number): number;
    GetPVarFloat(varname: string): number;
    DeletePVar(varname: string): number;
    GetPVarsUpperIndex(): number;
    GetPVarNameAtIndex(index: number, ret_len: number): string;
    GetPVarType(varname: string): number;
    SetPlayerChatBubble(text: string, color: string, drawdistance: number, expiretime: number): number;
    PutPlayerInVehicle(vehicleid: number, seatid: number): number;
    GetPlayerVehicleID(): number;
    GetPlayerVehicleSeat(): number;
    RemovePlayerFromVehicle(): number;
    TogglePlayerControllable(toggle: number): number;
    PlayerPlaySound(soundid: number, x: number, y: number, z: number): number;
    ApplyAnimation(animlib: string, animname: string, fDelta: number, loop: number, lockx: number, locky: number, freeze: number, time: number, forcesync: number): number;
    ClearAnimations(forcesync: number): number;
    GetPlayerAnimationIndex(): number;
    GetPlayerSpecialAction(): number;
    SetPlayerSpecialAction(actionid: number): number;
    DisableRemoteVehicleCollisions(disable: number): number;
    SetPlayerCheckpoint(x: number, y: number, z: number, size: number): number;
    DisablePlayerCheckpoint(): number;
    SetPlayerRaceCheckpoint(type: number, x: number, y: number, z: number, nextx: number, nexty: number, nextz: number, size: number): number;
    DisablePlayerRaceCheckpoint(): number;
    SetPlayerWorldBounds(x_max: number, x_min: number, y_max: number, y_min: number): number;
    SetPlayerMarkerForPlayer(showplayerid: number, color: string): number;
    ShowPlayerNameTagForPlayer(showplayerid: number, show: number): number;
    SetPlayerMapIcon(iconid: number, x: number, y: number, z: number, markertype: number, color: string, style: number): number;
    RemovePlayerMapIcon(iconid: number): number;
    AllowPlayerTeleport(allow: number): number;
    SetPlayerCameraPos(x: number, y: number, z: number): number;
    SetPlayerCameraLookAt(x: number, y: number, z: number, cut: number): number;
    SetCameraBehindPlayer(): number;
    GetPlayerCameraPos(): Array<any>;
    GetPlayerCameraFrontVector(): Array<any>;
    GetPlayerCameraMode(): number;
    EnablePlayerCameraTarget(enable: number): number;
    GetPlayerCameraTargetObject(): number;
    GetPlayerCameraTargetVehicle(): number;
    GetPlayerCameraTargetPlayer(): number;
    GetPlayerCameraTargetActor(): number;
    GetPlayerCameraAspectRatio(): number;
    GetPlayerCameraZoom(): number;
    AttachCameraToObject(objectid: number): number;
    AttachCameraToPlayerObject(playerobjectid: number): number;
    InterpolateCameraPos(FromX: number, FromY: number, FromZ: number, ToX: number, ToY: number, ToZ: number, time: number, cut: number): number;
    InterpolateCameraLookAt(FromX: number, FromY: number, FromZ: number, ToX: number, ToY: number, ToZ: number, time: number, cut: number): number;
    IsPlayerConnected(): number;
    IsPlayerInVehicle(vehicleid: number): number;
    IsPlayerInAnyVehicle(): number;
    IsPlayerInCheckpoint(): number;
    IsPlayerInRaceCheckpoint(): number;
    SetPlayerVirtualWorld(worldid: number): number;
    GetPlayerVirtualWorld(): number;
    EnableStuntBonusForPlayer(enable: number): number;
    TogglePlayerSpectating(toggle: number): number;
    PlayerSpectatePlayer(targetplayerid: number, mode: number): number;
    PlayerSpectateVehicle(targetvehicleid: number, mode: number): number;
    StartRecordingPlayerData(recordtype: number, recordname: string): number;
    StopRecordingPlayerData(): number;
    SelectTextDraw(hovercolor: string): number;
    CancelSelectTextDraw(): number;
    CreateExplosionForPlayer(X: number, Y: number, Z: number, type: number, Radius: number): number;
    SendClientCheck(type: number, memAddr: number, memOffset: number, byteCount: number): number;
    SetVehicleParamsForPlayer(vehicleid: number, objective: number, doorslocked: number): number;
}
